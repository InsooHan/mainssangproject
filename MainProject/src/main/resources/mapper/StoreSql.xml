<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="fpro.data.mapper.StoreMapperInter">
	<!-- store 전체 갯수 -->
	<select id="getTotalCount" resultType="int">
		select count(*) from store
	</select>
	
	<!-- store 추가 -->
	<insert id="insertStore" parameterType="storedto">
		insert into store (store_product, store_price, store_photo, store_content, store_category) values(#{store_product},#{store_price},#{store_photo},#{store_content},#{store_category})
	</insert>
	
	<!-- store 수정 -->
	<update id="updateStore" parameterType="storedto">
		update store set store_product=#{store_product}, store_price=#{store_price}, store_photo=#{store_photo}, store_content=#{store_content}, store_category=#{store_category} where store_num=#{store_num}
	</update>
	
	<!-- store 삭제 -->
	<delete id="deleteStore" parameterType="String">
		delete from store where store_num=#{store_num}
	</delete>
	
	<!-- store 전체 리스트 출력 -->
	<select id="getAllStores" resultType="storedto">
		select * from store order by store_num
	</select>
	
	<!-- store 중 메가티켓만 출력 -->
	<select id="getMegaticket" resultType="storedto">
		select * from store where store_category='ticket'
	</select>
	
	<!-- store_num에 맞는 데이터 출력 -->
	<select id="getStore" resultType="storedto" parameterType="String">
		select * from store where store_num=#{store_num}
	</select>
	
	<!-- 로그인 한 id에 맞는 num 값 가져오기 -->
	<select id="getNumById" resultType="String" parameterType="String">
		select num from member where id=#{id}
	</select>
	
	<!-- cart 테이블 insert -->
	<insert id="insertCart" parameterType="cartdto">
		insert into storecart (store_num, member_num, cart_cnt, cart_day) values(#{store_num}, #{member_num}, #{cart_cnt}, now())
	</insert>
	
	<!-- 가장 최근에 추가된 cart 테이블 num -->
	<select id="getMaxNum" resultType="int">
		select ifnull(max(cart_idx),0) from storecart
	</select>
	
	<!-- cart_idx에 맞는 데이터 출력 -->
	<select id="getCart" resultType="cartdto" parameterType="String">
		select * from storecart where cart_idx=#{cart_idx}
	</select>
	
	<!-- id에 맞는 storecart 리스트 출력 -->
	<select id="getCartById" resultType="cartdto" parameterType="String">
		select c.cart_idx, s.store_product, s.store_photo, s.store_price, c.cart_cnt, c.cart_day from storecart c, store s, member m where c.store_num = s.store_num and c.member_num = m.num and m.id=#{id} order by c.cart_idx
	</select>
	
	<!-- storecart 삭제 -->
	<delete id="deleteCart" parameterType="String">
		delete from storecart where cart_idx=#{cart_idx}
	</delete>
	
	<!-- storecart 갯수 삭제 -->
	<update id="updateCartCnt" parameterType="map">
		update storecart set cart_cnt=#{cart_cnt} where cart_idx=#{cart_idx}
	</update>

	<!-- storecart에 제품 있는지 확인 -->
	<select id="checkCart" resultType="int" parameterType="map">
		select count(*) from storecart where store_num=#{store_num} and member_num = #{member_num}
	</select>
	
	<!-- storecart에 제품이 있는 상태이면 기존 cart_cnt에 구매하려는 갯수 더하기 -->
	<update id="plusCartCnt" parameterType="map">
		update storecart set cart_cnt=cart_cnt+#{cart_cnt} where store_num=#{store_num}
	</update>
	
	<!-- storecart에 member_num에 해당하는 데이터 삭제 -->
	<delete id="deleteCartByMem" parameterType="String">
		delete from storecart where member_num = #{member_num}
	</delete>
	
	
	
</mapper>